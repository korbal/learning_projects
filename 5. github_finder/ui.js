class UI {
  constructor(){
    this.profile = document.querySelector('#profile');
  }

  // Class methods
  showProfile(user){
    //console.log(user);
    // Take user data and build a template literal, insert into this.profile which is that profile id on the interface. basically creating the html skeleton to display here. 
    this.profile.innerHTML = `
    <div class="card card-body mb-3">
      <div class="row">
        <div class ="col-md-3">
          <img src="${user.avatar_url}" class="img-fluid mb-3">
          <a href="${user.html_url}" target="_blank" class="btn btn-primary btn-block mb-3 ">View Profile</a>
        </div>
        <div class ="col-md-9">
          <span class="badge badge-primary">Public Repos: ${user.public_repos}</span>
          <span class="badge badge-secondary">Public Gists: ${user.public_gists}</span>
          <span class="badge badge-success">Followers: ${user.followers}</span>
          <span class="badge badge-info">Following: ${user.following}</span>
          <br><br>
          <ul class="list-group">
            <li class="list-group-item">Company: ${user.company}</li>
            <li class="list-group-item">Website/Blog: ${user.blog}</li>
            <li class="list-group-item">Location: ${user.location}</li>
            <li class="list-group-item">Member Since: ${user.created_at}</li>
          </ul>
        </div>
      </div>
    </div>
    <h3 class="page-heading mb-3">Latest Repos</h3>
    <div id="repos">
    `;
  
  }

  // Show user repos. repos is an array
  showRepos(repos){
      let output = '';
      repos.forEach(function(repo){
        output += `
          <div class="card card-body mb-2">
            <div class="row">
              <div class="col-md-6">
                <a href="${repo.html_url}" target="_blank">${repo.name}</a>
              </div>
              <div class="col-md-6">
              <span class="badge badge-primary">Stars: ${repo.stargazers_count}</span>
              <span class="badge badge-secondary">Watchers: ${repo.watchers_count}</span>
              <span class="badge badge-success">Forks: ${repo.forks_count}</span>
              </div>
            </div>
          </div>
        `;
      });

      // Output repos. #repos is generated by showProfile()
      document.querySelector('#repos').innerHTML = output;
  }

  // Show alert message
  showAlert(message, className){
    // Clear remaining alerts, otherwise with every new non-existing user, a new alert pops up
    this.clearAlert();
    // create DIV
    const div = document.createElement('div');
    div.className = className;
    // Add text. appendchild puts it "inside"
    div.appendChild(document.createTextNode(message));
    // Get parent. there are .containers, so searchContainer added to the relevant parent 
    const container = document.querySelector('.searchContainer');
    // Get search box
    const search = document.querySelector('.search');
    // Insert alert
    container.insertBefore(div, search);
    // timeout after 3 secs
    setTimeout(() => {
      this.clearAlert();
    }, 3000);
  }
  // Clear alert message, otherwise with every new non-existing user a new alert pops up
  clearAlert(){
    const currentAlert = document.querySelector('.alert');
    //If there is an alert on page, remove it
    if(currentAlert){
      currentAlert.remove();
    }
  }

  // Clear profile
  clearProfile(){
    this.profile.innerHTML = '';
  }
}